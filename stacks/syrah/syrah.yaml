# ------------------------------------------------------------------------------
# PROGRAMMING ENVIRONMENT SECTION (PE)
#
# The PR section follows the syntax: <pe_name>_<stack_name>_<package_name>.
# for example: intel_stable_compiler. There is a parent child schema that must
# be respected. The metadata key is ignored for this purpose. The core PE only
# has one information and does not follow the same schema. Any key under the
# <package_name> will be seen as a filter or it will be ignored. In the future
# we may need to introduce a stack key and a dependencies key for the case where
# we want to compile the compiler or stack libraries with GPU support. For now,
# the core_compiler should have this name (this means 'core' key and 'compiler'
# for subkey. We can also set section:core for the core PE.
# ------------------------------------------------------------------------------
core:
  metadata:
    section: core
  compiler: <core_compiler>

intel:
  metadata:
    section: pe
  stable:
    compiler: intel@20.0.4
    mpi: intel-mpi@2019.10.317
    blas: intel-mkl@2020.4.304
    python3: python@<python3> +tkinter +optimization ^freetype@2.7.1 ^fontconfig@2.12.3

gcc:
  metadata:
    section: pe
  stable:
    compiler: gcc@12.1.0
    mpi:
      infiniband: mvapich2 fabrics=mrail process_managers=slurm threads=multiple @2.3.7
      ethernet: mvapich2 fabrics=tcp,self process_managers=slurm threads=multiple @2.3.7
    blas: openblas@0.3.20 threads=none +locking
    python3: python@<python3> +tkinter +optimization ~debug
    python2: python@2.7.18 +tkinter ~debug

# ------------------------------------------------------------------------------
# PACKAGES SECTION
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# Core packages: compiled with the system compiler
core_packages:
  metadata:
    section: packages
  pe:
    - core
  packages:
    - autoconf
    - automake
    - cmake
    - curl
    - fastqc
    - fio
    - git
    - git-lfs
    - i7z
    - libtool
    - lmod
    - m4
    - parallel
    - picard
    - sbt
    - sratoolkit
    - tar
    - tmux
    - trimmomatic

# ------------------------------------------------------------------------------
# Serial Packages: do not depend on MPI
serial_packages:
  metadata:
    section: packages
  pe:
    - gcc_stable
    - intel_stable
  packages:
    - angsd
    - bedtools2
    - bwa
    - bzip2
    - eigen
    - fastqc
    - ffmpeg
    - fftw +openmp ~mpi
    - gsl
    - hdf5 ~mpi:
        default: { variants: +szip +hl +fortran +cxx }
    - hisat2
    - htslib
    - intel-tbb
    - jasper
    - libxc
    - mafft
    - metis:
        default: { variants: +real64 }
    - muscle
    - namd interface=tcl:
        dependencies:
          - charmpp ~smp backend=verbs build-target=charm++ pmi=slurmpmi2
    - netcdf-c ~mpi ^hdf5 ~mpi
    - netcdf-fortran ~mpi ^netcdf-c ~mpi ^hdf5 ~mpi
    - nfft
    - scotch ~mpi:
        defaults: { variants: +esmumps ~metis }
    - stacks
    - star
    - subread
    - tcl
    - valgrind ~boost ~mpi
    - voropp
#    - cudnn@8.0.3.39-11.0:
#        dependencies:
#          gpu:
#            nvidia: cuda@11.0.2

serial_packages_nvidia_only:
  metadata:
    section: packages
    gpu: nvidia
  pe:
    - gcc_stable
    - intel_stable
  packages:
    - cuda:
        defaults:
          version: 11.7.0
    - cuda@10.4.0

serial_packages_gcc_stable:
  metadata:
    section: packages
  pe:
    - gcc_stable
  packages:
    - intel-mkl
    - ffmpeg +libx264
    - glpk+gmp
    # julia >= 0.5 conflicts with intel compilers
    # it is not in the serial_packages_python_gcc_stable due to the dependecy to mkl
    - julia+cxx+mkl
    - llvm:
        defaults:
          gpu:
            nvidia: +cuda cuda_arch=<cuda_arch>
            none: ~cuda
    - node-js:
        dependecies:
          - python@<python3> ~tkinter ~optimizations
          - openssl@1.1.1b
    # TODO: check if the reuse: True makes it use the proper node-js
    - npm
    - openblas threads=openmp
    - python:
        defaults:
          version: <python3>
          variants: +tkinter +optimizations ~debug
    - python@<python3> +tkinter ~optimizations +debug
    - sox

serial_packages_gcc_stable_gpu:
  metadata:
    section: packages
  pe:
    - gcc_stable
  dependecies:
    - gpu
  packages:
    - xgboost:
        variants:
          gpu:
            nvidia: +cuda cuda_arch=<cuda_arch>
            none: ~cuda

# ------------------------------------------------------------------------------
# BLAS/LAPACK dependant packages
serial_packages_blas:
  metadata:
    section: packages
  pe:
    - gcc_stable
    - intel_stable
  dependencies:
    - blas
  packages:
    - arpack-ng~mpi
    - gmsh ~mpi +hdf5 +cgns +eigen +opencascade +openmp
    - ncview:
        dependencies:
          - netcdf-c~mpi
    - superlu

serial_packages_blas_gpu:
  metadata:
    section: packages
  pe:
    - gcc_stable
    - intel_stable
  dependencies:
    - blas
    - gpu
  packages:
    - suite-sparse:
        variants:
          gpu:
            nvidia: +cuda cuda_arch=<cuda_arch>
            none: ~cuda

#serial_packages_blas_gpu_only:
#  metadata:
#    section: packages
#    gpu: only
#  pe:
#    - gcc_stable
#    - intel_stable
#  dependencies:
#    - blas
#    - gpu
#  packages:
#    - magma:
#        variants:
#          gpu:
#            nvidia: +cuda cuda_arch=<cuda_arch>

serial_packages_blas_gcc_stable:
  metadata:
    section: packages
  pe:
    - gcc_stable
  dependencies:
    - blas
  packages:
    - armadillo+hdf5
      ^arpack-ng~mpi
      ^hdf5~mpi
    - octave

serial_packages_python:
  metadata:
    section: packages
  pe:
    - gcc_stable
    - intel_stable
  dependencies:
    - blas
  packages:
    - bowtie2
    - boost ~mpi:
        defaults: { variants: cxxstd=14 +icu +python +numpy }
    - cairo:
        defaults: { variants: +png +pdf +fc +ft }
    - hwloc +cairo:
        variants:
          gpu:
            nvidia: +cuda +nvml
            none: ~cuda
    - iq-tree@1.6.12
    - iq-tree@2.0.6
    - mercurial
    - ninja
    - prinseq-lite
    - py-biopython
    - py-cutadapt
    - py-deeptools
    - py-keras:
        variants:
          gpu:
            nvidia: +cuda cuda_arch=<cuda_arch>
            none: ~cuda
    - py-macs2
    - py-pybigwig
    - py-pybind11
    - py-scikit-learn
    - py-statsmodels
    - py-theano:
        variants:
          gpu:
            nvidia: +cuda cuda_arch=<cuda_arch>
            none: ~cuda
    - samtools
    - scons
    - snakemake

serial_packages_python_activated:
  metadata:
    section: packages
    modules:
      blacklist: True
    activated: True
  pe:
    - gcc_stable
    - intel_stable
  dependencies:
    - blas
  packages:
    - py-absl-py
    - py-astunparse
    - py-cython
    - py-gast
    - py-google-pasta
    - py-grpcio
    - py-keras-preprocessing
    - py-matplotlib
    - py-numpy
    - py-opt-einsum
    - py-pandas
    - py-pip
    - py-ply
    - py-protobuf
    - py-requests
    - py-scipy
    - py-semver
    - py-six
    - py-sympy
    - py-termcolor
    - py-virtualenv
    - py-wheel
    - py-wrapt
    - py-xarray

serial_packages_python2_deprecated:
  metadata:
    section: packages
  pe:
    - gcc_stable
  dependencies:
    - blas
    - python2
  packages:
    - jellyfish
    - scons
    - py-pip
    - py-virtualenv

serial_packages_python_gcc_stable:
  metadata:
    section: packages
  pe:
    - gcc_stable
  dependencies:
    - blas
    - python3
  packages:
    # needs boost@1.54 (https://backwardincompatible.com/post/169360794395/compiling-illumina-bcl2fastq-220-on-ubuntu-with)
    - bcl2fastq2
    - blast-plus@2.9.0
    - caffe ~opencv +python:
        variants:
          gpu:
            nvidia: +cuda cuda_arch=<cuda_arch>
            none: ~cuda
    - gdb
    - libgd
    - mummer
    #  Skipping build of polymake since perl-term-readline-gnu failed
    - polymake@3.5
    - openbabel +python
    - py-torch:
        defaults:
          variants:
            gpu:
              nvidia: +cuda cuda_arch=<cuda_arch> +magma
              none: ~cuda ~cudnn ~nccl
              rocm: +magma +rocm
#        dependencies:
#          gpu:
#            nvidia: [magma +cuda cuda_arch=<cuda_arch>]
#            rocm: [magma +rocm amdgpuarch=<amd_arch>]
    - py-torchvision
    - r +external-lapack:
        dependencies: openjdk@11.0.2
    - gatk
    # - py-spython gpu only
    - spades
    - vtk+ffmpeg~mpi+opengl2+python~qt+xdmf:
        variants:
          gpu:
            nvidia: ~osmesa
            none: +osmesa

serial_packages_python_intel_stable:
  metadata:
    section: packages
  pe:
    - gcc_stable
  dependencies:
    - blas
    - python3
  packages:
    - openbabel +python ^harfbuzz@2.1.3

external_packages:
  metadata:
    section: packages
    cloud: False
  pe:
    - core
  packages:
    - adf@2017.111
    - ansys@19.2
    - ansys@2022R1
    - cfdplusplus@19.1
    - comsol@5.6
    - fdtd@2022-R1.1-2963
    - gaussian@g16-C.01
    - gurobi@9.1.0
    - intel-vtune@2019.6.0.602217
    - intel-advisor@2019.5.0.602216
    - likwid@4.3.0
    - maple@2017
    - mathematica@13.0
    # TODO install the latest version
    - matlab@R2019b
    - smr@2017.06
    - totalview@2020.3.11

mpi_packages:
  metadata:
    section: packages
  pe:
    - gcc_stable
    - intel_stable
  dependencies:
    - mpi
  packages:
    - arpack-ng:
        defaults: { variants: +mpi }
    - fftw +mpi +openmp:
        defaults: { variants: +mpi ~openmp }
    - hdf5 +mpi
    - netcdf-c +mpi
    - netcdf-fortran +mpi
    - phylobayesmpi

mpi_lapack_packages:
  metadata:
    section: packages
  pe:
    - gcc_stable
    - intel_stable
  dependencies:
    - mpi
    - blas
  packages:
    - gmsh+openmp+hdf5 ^hdf5+mpi
    - hypre:
        defaults:
          variants:
            gpu:
              nvidia: +cuda
              none: ~cuda
    - parmetis
    - quantum-espresso+mpi+scalapack
    - quantum-espresso+mpi+scalapack hdf5=parallel ^hdf5+mpi
    - scotch +mpi
    - superlu-dist
    - openfoam-org +metis ^scotch+mpi

mpi_blas_packages:
  metadata:
    section: packages
  pe:
    - gcc_stable
    - intel_stable
  dependencies:
    - mpi
    - blas
    - python
  packages:
    - boost +mpi
    - cgal ^boost+mpi
    - iq-tree@1.6.12+mpi ^boost +mpi
    - neuron +mpi +python +shared
    - plumed:
        defaults: { variants: +mpi +gsl }
    - py-h5py ^hdf5 +mpi
    - py-mpi4py

mpi_packages_gcc_stable:
  metadata:
    section: packages
  pe:
    - gcc_stable
  dependencies:
    - mpi
  packages:
    - cpmd~openmp ^fftw+mpi~openmp
    - relion ~mklfft:
        variants:
          gpu:
            nvidia: +cuda cuda_arch=<cuda_arch> +double-gpu
            none: ~cuda

mpi_blas_packages_gcc_stable:
  metadata:
    section: packages
  pe:
    - gcc_stable
  dependencies:
    - mpi
    - blas
  packages:
    - abinit~hdf5~openmp+mpi+scalapack
    - elmerfem+mumps+openmp+hypre ^netcdf-fortran+mpi
    - gromacs+mpi:
        variants:
          gpu:
            nvidia: +cuda
            none: ~cuda
    - mumps:
        defaults: { variants: +mpi +parmetis +metis +scotch +ptscotch }
        dependencies:
          - scotch +mpi
          - netlib-scalapack
    - netlib-scalapack
    - yambo+mpi io=iotk,etsf-io:
        dependencies:
          - netcdf-fortran+mpi

mpi_blas_python_packages_gcc_stable:
  metadata:
    section: packages
  pe:
    - gcc_stable
  dependencies:
    - mpi
    - blas
    - python
  packages:
    - adios2:
        defaults: { variants: +hdf5 +mpi +python }
    - amber +mpi:
        variants:
          gpu:
            nvidia: +cuda cuda_arch=<cuda_arch>
            none: ~cuda
        dependencies:
          - netcdf-fortran+mpi
          - boost +mpi
    - cp2k+mpi~plumed:
        variants:
          gpu:
            nvidia: +cuda cuda_arch=<cuda_arch>
            none: ~cuda
        dependencies:
          - boost +mpi
    - cp2k+mpi+plumed:
        variants:
          gpu:
            nvidia: +cuda cuda_arch=<cuda_arch>
            none: ~cuda
        dependencies:
          - boost +mpi
    - petsc:
        defaults:
          common: ~int64 +double +hdf5 +metis +mpi +mumps +superlu-dist +hypre +suite-sparse
          gpu:
            nvidia: +cuda
            none: ~cuda
        dependencies:
          - netlib-scalapack
          - hdf5 +mpi
    - slepc:
        defaults: { variants: +arpack }
    - fenics~parmetis+hdf5+scotch+suite-sparse~vtk~trilinos ^boost +mpi
    - gromacs@2019.4+mpi+plumed:
        variants:
          gpu:
            nvidia: +cuda
            none: ~cuda
    - lammps:
        variants:
          common: build_type=Release +asphere +body +class2 +colloid +compress +coreshell +dipole +granular +kspace +latte +lib +manybody +mc +misc +molecule +mpi +mpiio +peri ~poems +python +qeq  +replica +rigid +shock +snap +srd +user-atc +user-h5md +user-lb +user-misc +user-netcdf +voronoi +plumed
          gpu:
            nvidia: +cuda cuda_arch=<cuda_arch>
            none: ~cuda
        dependencies:
          - netcdf-c+mpi
    - openfoam +metis ^boost +mpi
#    - paraview +shared +python3 +hdf5:
#        variants:
#          gpu: ~osmesa
#          none: +osmesa
#        dependencies:
#          - netcdf-c+mpi
    - py-horovod controllers=mpi frameworks=pytorch,tensorflow,keras:
        variants:
          gpu:
            nvidia: tensor_ops=nccl +cuda cuda_arch=<cuda_arch>
            none: tensor_ops=mpi ~cuda
    - py-petsc4py
    - py-tensorflow:
        defaults:
          variants:
            common: +mpi
            gpu:
              nvidia: +cuda cuda_arch=<cuda_arch>
              none: ~cuda ~nccl
    - opencv +vtk +contrib:
        variants:
          gpu:
            nvidia: +cuda cuda_arch=<cuda_arch>
            none: ~cuda
        dependencies:
          - netcdf-c +mpi
          - boost +mpi
    - vtk+ffmpeg+mpi+opengl2+python~qt+xdmf:
        variants:
          gpu:
            nvidia: ~osmesa
            none: +osmesa
        dependencies:
          - netcdf-c +mpi
          - boost +mpi

mpi_packages_intel_stable:
  metadata:
    section: packages
  pe:
    - intel_stable
  dependencies:
    - mpi
  packages:
    - crystal17@1.0.2
    - relion +mklfft:
        variants:
          gpu: { none: ~cuda }

mpi_blas_packages_intel_stable:
  metadata:
    section: packages
  pe:
    - intel_stable
  dependencies:
    - mpi
    - blas
  packages:
    - mumps+mpi+parmetis+metis+scotch+ptscotch
    - castep

mpi_blas_python_packages_intel_stable:
  metadata:
    section: packages
  pe:
    - intel_stable
  dependencies:
    - mpi
    - blas
    - python
  packages:
    - petsc:
        variants:
          common: ~int64 +double +hdf5 +metis +mpi +mumps +superlu-dist +hypre +suite-sparse
          gpu:
            nvidia: +cuda
            none: ~cuda
    - slepc+arpack
    - freefem +mpi +petsc

# - intel_mpi_lapack_python2_packages:
#   - molpro@2019.2+mpi

bechmarks:
  metadata:
    section: packages
  pe:
    - gcc_stable
    - intel_stable
  packages:
    - stream
    - stream+openmp

mpi_benchmarks:
  metadata:
    section: packages
  pe:
    - gcc_stable
    - intel_stable
  dependencies:
    - mpi
    - blas
  packages:
    - hpl~openmp
    - osu-micro-benchmarks
    - hp2p
